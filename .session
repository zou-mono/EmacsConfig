;;; Automatically generated on Mon Jun 20 14:50:55 2016
;;; Invoked by mono@mono-vm using 24.5.1
(setq-default kill-ring '("(setq shell-command-switch \"-ic\")" #("(nvm--version-installed\\? VERSION)" 26 33 (face help-argument-name)) "(when (>= emacs-major-version 24)
  (require 'package)
  (add-to-list
   'package-archives
   '(\"melpa\" . \"http://melpa.org/packages/\")
   t)
  (package-initialize))" "(defun do-nvm-use (version)

(interactive \"sVersion: \")

(nvm-use version)

;; exec-path-from-shell is going to make a new login shell and get the value

;; from that. but nvm-use does setenv \"PATH\". so we want to make exec-path

;; respect the PATH in the Emacs process, not a new shell.

;(exec-path-from-shell-copy-env \"PATH\")

;; need an exec-path-from-PATH defun.

(exec-path-from-PATH))" "(require-package 'nvm)" #("/bin/bash: nvm: command not found" 0 33 (inhibit-line-move-field-capture t field output rear-nonsticky t front-sticky \.\.\. face font-lock-string-face fontified t)) #("async-shell-command" 0 19 (fontified t))))
(setq-default session-file-alist '(("~/.emacs.d/lisp/init-base.el" 1505 1472 1 nil nil 1505 (overwrite-mode)) ("~/.emacs.d/lisp/init-web.el" 54 653 1 nil nil 54 (overwrite-mode)) ("~/.emacs.d/init.el" 534 368 1 nil nil 533 (overwrite-mode)) ("~/.emacs.d/elpa/nvm-20151113.55/nvm-autoloads.el" 220 nil 1 nil nil 220 (overwrite-mode)) ("~/.emacs.d/elpa/f-20160426.527/f-autoloads.el" 216 nil 1 nil nil 216 (overwrite-mode)) ("~/.emacs.d/elpa/s-20160508.2357/s-autoloads.el" 215 nil 1 nil nil 215 (overwrite-mode)) ("~/.emacs.d/elpa/dash-functional-20160615.1351/dash-functional-autoloads.el" 251 nil 1 nil nil 251 (overwrite-mode)) ("~/.emacs.d/elpa/dash-20160619.611/dash-autoloads.el" 222 nil 1 nil nil 222 (overwrite-mode)) ("~/.emacs.d/lisp/init-org.el" 933 832 1 nil nil 2328 (overwrite-mode)) ("~/Documents/blog/test/source/_posts/20160616_emacs_common_short.org" 814 706 1 nil nil 633 (overwrite-mode)) ("~/Documents/blog/test/themes/next/_config.yml" 8485 5250 1 nil nil 616 (overwrite-mode)) ("~/Documents/org-mode-test/test1.org" 284 170 1 nil nil 284 (overwrite-mode)) ("~/.emacs" 28 273 1 nil nil 273 (overwrite-mode)) ("~/Documents/blog/test/source/_posts/test2.org" 212 212 1 nil nil 212 (overwrite-mode)) ("~/Documents/blog/test/source/_posts/ 20160616_emacs_common_shortcut1.org" 298 219 1 nil nil 297 (overwrite-mode)) ("~/Documents/blog/test/source/_posts/20160616_emacs_common_shortcut" 102 234 1 nil nil 102 (overwrite-mode)) ("~/Documents/python_test/scrapy_test.py" 236 88 1 nil nil 143 (overwrite-mode)) ("~/Documents/blog/test/source/_posts/test.org" 152 209 1 nil nil 210 (overwrite-mode)) ("~/Documents/org-mode-test/test1.html" 226 12345 1 nil nil 12084 (overwrite-mode)) ("~/Documents/org-mode-test/index.org" 199 nil 1 nil nil 199 (overwrite-mode)) ("~/Documents/org-mode-test/sitemap.org" 149 nil 1 nil nil 149 (overwrite-mode)) ("~/.emacs.d/el-get/.loaddefs.el" 134109 nil 1 nil nil 185865 (overwrite-mode)) ("~/.emacs.d/el-get/org-mode/lisp/org-loaddefs.el" 104963 nil 1 nil nil 104963 (overwrite-mode)) ("~/.emacs.d/el-get/org-mode/contrib/lisp/org-loaddefs.el" 1949 1949 1 nil nil 2130 (overwrite-mode)) ("~/.emacs.d/elpa/org-20160606/org-loaddefs.el" 88290 nil 1 nil nil 88290 (overwrite-mode)) ("~/.emacs.d/elpa/org-20160606/org-autoloads.el" 26866 nil 1 nil nil 26866 (overwrite-mode)) ("~/Documents/blog/test/source/_posts/emacs\345\270\270\347\224\250\345\277\253\346\215\267\351\224\256_20160608.org" 232 227 1 nil nil 232 (overwrite-mode)) ("~/Documents/js_projects/index.html" 326 317 1 nil nil 41 (overwrite-mode)) ("~/.emacs.d/el-get/web-mode/web-mode.el" 87602 87540 1 nil nil 239338 (overwrite-mode)) ("~/Documents/js_projects/test.js" 123 123 1 nil nil 42 (overwrite-mode)) ("~/.emacs.d/lisp/init-cedet.el" 1057 814 1 nil nil 858 (overwrite-mode)) ("~/Documents/python_test/1.py" 28 114 1 nil nil 121 (overwrite-mode)) ("~/.emacs.d/lisp/init-Python.el" 374 374 1 nil nil 374 (overwrite-mode)) ("~/Documents/python_test/test.py" 215 2450 1 nil nil 215 (overwrite-mode)) ("~/.emacs.d/lisp/init-js.el" 148 148 1 nil nil 148 (overwrite-mode)) ("~/Documents/blog/test/source/_posts/test_article.org" 398 374 1 nil nil 409 (overwrite-mode)) ("~/.emacs.d/elpa/pyenv-mode-20160221.1123/pyenv-mode-autoloads.el" 921 nil 1 nil nil 921 (overwrite-mode)) ("~/.emacs.d/elpa/pythonic-20160221.1123/pythonic-autoloads.el" 482 nil 1 nil nil 482 (overwrite-mode)) ("~/.emacs.d/elpa/dash-20160510.1127/dash-autoloads.el" 222 nil 1 nil nil 222 (overwrite-mode)) ("~/.emacs.d/lisp/init-R.el" 47 427 1 nil nil 47 (overwrite-mode)) ("~/.emacs.d/lisp/gtags.el" 7012 6799 1 nil nil 7041 (overwrite-mode)) ("~/.emacs.d/ede-projects.el" 86 nil 1 nil nil 86 (overwrite-mode)) ("~/Documents/python_test/1.pY" 53 47 1 nil nil 64 (overwrite-mode)) ("~/.emacs.d/el-get/cedet/lisp/cedet/semantic/mru-bookmark.el" 9410 7975 1 nil nil 12968 (overwrite-mode)) ("~/.emacs.d/el-get/window-purpose/window-purpose-core.el" 12216 12668 1 nil nil 12216 (overwrite-mode)) ("~/.emacs.d/el-get/window-purpose/window-purpose.el" 10064 8791 1 nil nil 10061 (overwrite-mode)) ("/usr/local/share/emacs/24.5/lisp/cedet/semantic/mru-bookmark.el.gz" 9452 12980 1 nil nil 12980 (overwrite-mode)) ("~/.emacs.d/elpa/dracula-theme-20160228.1913/dracula-theme-autoloads.el" 426 nil 1 nil nil 426 (overwrite-mode)) ("~/.IPython/ipy_user_conf.py" 311 1 1 nil nil 378 (overwrite-mode)) ("~/.emacs.d/init-tabbar.el" 1711 1636 1 nil nil 1683 (overwrite-mode)) ("~/.emacs.d/init-base.el" 589 828 1 nil nil 1041 (overwrite-mode))))
(setq-default file-name-history '("~/Documents/js_projects/index.html" "~/Documents/python_test/test.py" "~/Documents/org-mode-test/test1.html" "~/Documents/python_test/1.py" "~/Documents/python_test/scrapy_test.py" "~/Documents/blog/test/themes/next/_config.yml" "~/.emacs.d/lisp/init-Python.el" "~/.emacs.d/lisp/init-base.el" "~/.emacs.d/lisp/init-cedet.el" "~/Documents/org-mode-test/test1.org" "~/.emacs.d/init.el" "~/.emacs.d/lisp/init-org.el" "~/Documents/blog/test/source/_posts/20160616_emacs_common_short.org" "~/.emacs" "~/.emacs.d/lisp/init-web.el" "~/.emacs.d/elpa/nvm-20151113.55/nvm-autoloads.el" "~/.emacs.d/elpa/nvm-20151113.55/nvm.el" "~/.emacs.d/ede-projects.el" "~/.emacs.d/" "~/.emacs.d/elpa/f-20160426.527/f-autoloads.el" "~/.emacs.d/elpa/s-20160508.2357/s-autoloads.el" "~/.emacs.d/elpa/dash-functional-20160615.1351/dash-functional-autoloads.el" "~/.emacs.d/elpa/dash-20160619.611/dash-autoloads.el" "~/.emacs.d/lisp" "~/Documents/blog/test/" "~/Documents/blog/test" "~/Documents/blog/test/source/_posts/t.org"))
(setq-default search-ring '("nvm" "cu" "highlight" "installed" "org" "org-mode" "site-co" "function keys" "function" "web-mode-buffer-indent" "key" "syntax" "-" "whitespace" "^" "s"))
(setq-default regexp-search-ring '("\\<org\\>" "\\<\\>" "\\wel\\w" "\\<el\\>" "\\'el\\'" "\\bwindows\\b" "pyenv" "\\<ess\\>" "<ess>" "\\<ess\343\200\201\343\200\213"))
(setq-default Info-isearch-initial-history '(("dir" "Top" 632) ("/usr/local/share/info/elisp" "Function Keys" 1010575) ("/usr/local/share/info/elisp" "Function Keys" 1011838) ("/usr/local/share/info/elisp" "*Index for `function keys'*" 194) ("/usr/local/share/info/elisp" "Top" 1110) ("/usr/local/share/info/elisp" "Function Keys" 1010317) ("/usr/local/share/info/elisp" "Top" 3402) ("/usr/local/share/info/emacs" "Top" 1548) ("/usr/local/share/info/emacs" "Windows" 528028) ("/usr/local/share/info/emacs" "Buffers" 501350) ("/usr/local/share/info/emacs" "Files" 410904) ("/usr/local/share/info/emacs" "Keyboard Macros" 388216) ("/usr/local/share/info/emacs" "Files" 410201) ("/usr/local/share/info/emacs" "Keyboard Macros" 386858) ("/usr/local/share/info/emacs" "Fixit" 370725) ("/usr/local/share/info/emacs" "Search" 309728) ("/usr/local/share/info/emacs" "Display" 243867) ("/usr/local/share/info/emacs" "Registers" 230648) ("/usr/local/share/info/emacs" "Killing" 193058) ("/usr/local/share/info/emacs" "Mark" 173644) ("/usr/local/share/info/emacs" "Help" 150608) ("/usr/local/share/info/emacs" "M-x" 149195) ("/usr/local/share/info/emacs" "Minibuffer" 115624) ("/usr/local/share/info/emacs" "Basic" 85959) ("/usr/local/share/info/emacs" "Exiting" 83218) ("/usr/local/share/info/emacs" "Entering Emacs" 79737) ("/usr/local/share/info/emacs" "Commands" 77419) ("/usr/local/share/info/emacs" "Keys" 76468) ("/usr/local/share/info/emacs" "User Input" 73871) ("/usr/local/share/info/emacs" "Top" 2675)))
(setq-default Info-search-history '("support" "function"))
(setq-default buffer-name-history '("*info*" "nvm.el" "nvm-autoloads.el" "*Backtrace*" "*Async Shell Command*" "*Org Agenda(a:2016-06-16)" "*ESS*" "_config.yml" "t.org" "test2.org"))
(setq-default coding-system-history '("nil"))
(setq-default command-history '((describe-variable (quote shell-command-switch)) (describe-variable (quote shell-file-name)) (shell-command "echo $NVM_DIR" nil nil) (ielm) (describe-function (quote nvm--version-installed\?)) (describe-function (quote nvm--version-name)) (describe-variable (quote exec-path)) (shell-command "echo $NVM_BIN" nil nil) (shell-command "echo $PATH" nil nil) (kill-buffer "*info*") (kill-buffer "nvm.el") (shell-command "nvm ls" nil nil) (shell-command "node -v" nil nil) (kill-buffer "nvm-autoloads.el") (describe-function (quote do-nvm-use)) (describe-function (quote nvm-use)) (describe-variable (quote load-path)) (find-file "~/.emacs.d/" t) (Info-goto-emacs-command-node (quote do-nvm-use)) (do-nvm-use "4.3.0") (find-file "~/.emacs.d/lisp" t) (list-packages nil) (el-get-list-packages) (indent-region (region-beginning) (region-end) nil) (shell-command "nvm" nil nil) (shell nil) (kill-buffer "*Backtrace*") (shell-command "npm" nil nil) (describe-key "\241" 1 nil) (shell-command "hexo" nil nil)))
(setq-default ede-proj-target-history '("program"))
(setq-default extended-command-history '("ielm" "do-nvm-use" "list-packages" "el-get-list-packages" "indent-region" "shell-command" "shell" "mono/hexo-auto-publish" "org-version" "org-insert-src-block" "mono/hexo-org-new-open-post" "dired" "global-font-lock-mode" "org-mode" "open-python-perspective" "org-reload" "package-list-packages" "web-mode" "org-indent-line" "org-indent-indent-buffer" "org-indent-region" "uncomment-region" "global-visual-line-mode" "list-matching-lines" "js2-mode" "tabbar-mode" "flush-lines" "delete-blank-lines" "smart-tabs-mode" "S" "web-mode-buffer-highlight" "sgml-mode" "sgml-close-tag" "js-mode" "describe-variable" "smart-tab-mode" "lisp-mode" "life" "el-get-remove" "semantic-ia-fast-jump" "pyenv-use" "R" "term" "global-pyenv-mode" "package-install"))
(setq-default ggtags-global-search-history '(("319745bba7814c7707921f9a1f683413fa61d8ef" "myFunction" "/home/mono/Documents/js_projects/" nil 5 "test.js:3:function myFunction(x,y) ") ("1d450e69d2f4cc1dd9d5d211ebb8ffb138ef5c86" "--from-here=5:test.js result" "/home/mono/Documents/js_projects/" nil 5 "test.js:1:var result;") ("7d294b257320691d4be38fc1bda22e4db4f3baa9" "--reference parrot" "/home/mono/Documents/python_test/" nil 5 "1.py:7:parrot()") ("3c8da62c552666462c4b2d723d8478a845bb1b70" "--reference print_test2" "/home/mono/Documents/python_test/" nil 5 "1.py:10:print_test2()") ("6ab5c9510f5f2e9e1317afc172e0073bee579df0" "--reference print_test" "/home/mono/Documents/python_test/" nil 5 "1.py:9:print_test()") ("2c9b8d8b7138e82270c40e549298898b55ce14a4" "--from-here=9:1.py print_test" "/home/mono/Documents/python_test/" nil 5 "test.py:42:def print_test():") ("984a453808b1b74ba57c368fae5e551bca458b86" "--reference parent" "/home/mono/Documents/python_test/" nil 5 "test.py:122:class child(parent):") ("33ab28936bb8fd731bb15ec96ddddc014595be16" "--reference pprt" "/home/mono/Documents/python_test/" nil 5 "test.py:128:c.pprt()") ("22a15e78d8a7d900c33a4fd4ff448b38ecc4d8f9" "--from-here=94:test.py get" "/home/mono/Documents/python_test/" nil 5 "test.py:94:d.get('BOb')") ("e7f28e760ef03973db1d9204d457a559bcd25e16" "--from-here=71:test.py append" "/home/mono/Documents/python_test/" nil 5 "test.py:69:mylist.append('\"a\"')") ("38721e0db1de1c5872d9716999ee5fd0b262614f" "--from-here=72:test.py mylist" "/home/mono/Documents/python_test/" nil 5 "test.py:68:mylist = []") ("b9ce2e83a047d740d2233ab878135bac6bffa1cc" "--from-here=16:1.py print_test4" "/home/mono/Documents/python_test/" nil 5 "test.py:46:def print_test4():") ("4aa7b339b26a23750389a44e70d051cbaeb9609c" "--from-here=11:1.py parrot" "/home/mono/Documents/python_test/" nil 5 "test.py:31:def parrot(voltage=\"67\", state='a stiff',action='voom', type='Norwegian Blue'):") ("dd2b7b2e15d93e05ec488a5d94ff42899e892e4a" "--from-here=13:1.py print_test" "/home/mono/Documents/python_test/" nil 5 "test.py:37:def print_test():") ("dc8d5a44454f44cc64625e02ea2f0be0fed229ab" "--from-here=14:1.py print_test2" "/home/mono/Documents/python_test/" nil 5 "test.py:40:def print_test2():")))
(setq-default helm-ff-history '("/home/mono/Documents/blog/test/source/_posts/" "/home/mono/Documents/blog/test/" "/home/mono/.emacs.d/lisp/" "/home/mono/" "/home/mono/Documents/blog/" "/home/mono/Documents/js_projects/" "/home/mono/.emacs.d/" "/home/mono/Documents/" "/home/mono/Documents/python_test/" "/home/mono/Documents/R_Project/"))
(setq-default helm-source-complex-command-history '((name . "Complex Command History") (candidates . #[0 "\301\211:\203  @\262\302\232\204 \303!B\262A\262\202 \211\237\207" [command-history nil \.\.\. prin1-to-string] 5 "

(fn)"]) (action ("Eval" . #[257 "\301\300!\203 \211\302\303\304\305$\207" [helm-sexp--last-sexp boundp run-with-timer 0.1 nil helm-sexp-eval] 6 "

(fn CANDIDATE)"]) ("Edit and eval" . #[257 "\300\301\302!\"\207" [edit-and-eval-command "Eval: " read] 5 "

(fn CANDIDATE)"])) (persistent-action . helm-sexp-eval) (filtered-candidate-transformer helm-fuzzy-highlight-matches) (match helm-mm-exact-match helm-mm-match) (header-line . "C-j: helm-sexp-eval (keeping session)") (dont-plug helm-compile-source--multi-match helm-compile-source--persistent-help helm-compile-source--migemo) (matchplugin)))
(setq-default helm-source-file-name-history '((name . "File Name History") (candidates . file-name-history) (action . helm-type-file-actions) (persistent-action . ignore) (filtered-candidate-transformer helm-file-name-history-transformer helm-fuzzy-highlight-matches) (match helm-mm-exact-match helm-mm-match) (header-line . "C-j: ignore (keeping session)") (dont-plug helm-compile-source--multi-match helm-compile-source--persistent-help helm-compile-source--migemo) (matchplugin)))
(setq-default helm-source-info-history '((name . "Info Index: history") (init . helm-info-init) (candidates . helm-candidates-in-buffer) (action ("Goto node" . helm-info-goto)) (filtered-candidate-transformer helm-fuzzy-highlight-matches) (display-to-real . helm-info-display-to-real) (volatile) (match identity) (header-line . "C-j: Goto node (keeping session)") (dont-plug helm-compile-source--candidates-in-buffer helm-compile-source--multi-match helm-compile-source--persistent-help helm-compile-source--migemo) (matchplugin) (get-line . buffer-substring) (search helm-mm-exact-search helm-mm-search helm-candidates-in-buffer-search-default-fn) (info-file . "history")))
(setq-default info-lookup-history '("latex-mode"))
(setq-default minibuffer-history '("shell-command" "shell-fil" "nvm" "exec" "load" "nvm-use" "4.3.0" "regular update." "org-stru" "org-str" "java" "t" "org-html-po" "org-html-postamble" "org-export-all" "org-html-pos" "test2" "/home/mono/Documents/blog/test/source/_posts/" "/home/mono/Documents/blog/test/source/_posts/20160616_emacs_common_short.org" "/home/mono/Documents/blog/test/source/_posts/20160616_emacs_common_shortcut" "/home/mono/Documents/blog/test/source/_posts/20160616_emacs_common_shortcut.org" " 20160616_emacs_common_shortcut1" "/home/mono/Documents/blog/test/" "/home/mono/.pyenv/shims/ipython -i" "org-html-p" "/home/mono/.emacs.d/lisp/" "" "org-pu" "test" "org-html" "/home/mono/.emacs.d" "org-htm" "/home/mono/" "/home/mono/Do" "org-html-post" "org-html-"))
(setq-default occur-collect-regexp-history '("\\1"))
(setq-default regexp-history '("script" "^\\s-*$" "^ *$" "^\\s*$" "^\\s+$" "^$"))
(setq-default semantic-completion-default-history '("d"))
(setq-default serial-name-history '("/dev/ttyS0"))
(setq-default serial-speed-history '("9600" "1200" "2400" "4800" "14400" "19200" "28800" "38400" "57600" "115200"))
(setq-default shell-command-history '("echo $NVM_DIR" "echo $NVM_BIN" "echo $PATH" "nvm ls" "node -v" "nvm" "npm" "hexo"))
(setq-default smex-history '(R S cd 5x5 arp dbx dig))
(setq-default table-capture-columns-history '(""))
(setq-default table-capture-justify-history '("left"))
(setq-default table-capture-min-cell-width-history '("5"))
(setq-default table-cell-height-history '("1"))
(setq-default table-cell-span-direction-history '("right"))
(setq-default table-cell-split-contents-to-history '("split"))
(setq-default table-cell-split-orientation-history '("horizontally"))
(setq-default table-cell-width-history '("5"))
(setq-default table-col-delim-regexp-history '(""))
(setq-default table-columns-history '("3"))
(setq-default table-insert-row-column-history '("row"))
(setq-default table-justify-history '("center"))
(setq-default table-row-delim-regexp-history '(""))
(setq-default table-rows-history '("3"))
(setq-default table-sequence-count-history '("0"))
(setq-default table-sequence-increment-history '("1"))
(setq-default table-sequence-interval-history '("1"))
(setq-default table-sequence-justify-history '("left"))
(setq-default table-sequence-string-history '("0"))
(setq-default table-source-caption-history '("Table"))
(setq-default table-source-language-history '("html"))
(setq-default table-target-history '("cell"))
(setq-default venv-history '("test2"))
