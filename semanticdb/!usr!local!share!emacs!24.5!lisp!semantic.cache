;; Object lisp/
;; SEMANTICDB Tags save file
(semanticdb-project-database-file "lisp/"
  :tables
  (list
    (semanticdb-table "subr.el.gz"
      :major-mode 'emacs-lisp-mode
      :tags 
        '( ("declare-function" function (:arguments ("_fn" "_file" "_arglist" "_fileonly")) nil [1111 2631])
            ("defalias" code nil nil [2660 2681])
            ("noreturn" function (:arguments ("form")) nil [2683 2887])
            ("1value" function (:arguments ("form")) nil [2889 3127])
            ("def-edebug-spec" function (:arguments ("symbol" "spec")) nil [3129 3589])
            ("lambda" function (:arguments ("cdr")) nil [3591 4749])
            ("setq-local" function (:arguments ("var" "val")) nil [4751 4963])
            ("defvar-local" function (:arguments ("var" "val" "docstring")) nil [4965 5406])
            ("apply-partially" function (:arguments ("fun" "args")) nil [5408 5823])
            ("push" function (:arguments ("newelt" "place")) nil [5825 6419])
            ("pop" function (:arguments ("place")) nil [6421 7232])
            ("when" function (:arguments ("cond" "body")) nil [7234 7522])
            ("unless" function (:arguments ("cond" "body")) nil [7524 7810])
            ("dolist" function (:arguments ("spec" "body")) nil [7812 9091])
            ("dotimes" function (:arguments ("spec" "body")) nil [9093 10558])
            ("declare" function (:arguments ("_specs")) nil [10560 11075])
            ("ignore-errors" function (:arguments ("body")) nil [11077 11384])
            ("ignore" function
               (:user-visible-flag t
                :arguments ("_ignore"))
                nil [11415 11563])
            ("error" function (:arguments ("args")) nil [11620 12006])
            ("user-error" function (:arguments ("format" "args")) nil [12008 12534])
            ("define-error" function (:arguments ("name" "message" "parent")) nil [12536 13448])
            ("frame-configuration-p" function (:arguments ("object")) nil [13562 13817])
            ("caar" function (:arguments ("x")) nil [13842 13913])
            ("cadr" function (:arguments ("x")) nil [13915 13986])
            ("cdar" function (:arguments ("x")) nil [13988 14059])
            ("cddr" function (:arguments ("x")) nil [14061 14132])
            ("last" function (:arguments ("list" "n")) nil [14134 14551])
            ("butlast" function (:arguments ("list" "n")) nil [14553 14781])
            ("nbutlast" function (:arguments ("list" "n")) nil [14783 15060])
            ("delete-dups" function (:arguments ("list")) nil [15062 15415])
            ("delete-consecutive-dups" function (:arguments ("list" "circular")) nil [15492 15960])
            ("number-sequence" function (:arguments ("from" "to" "inc")) nil [15962 17779])
            ("copy-tree" function (:arguments ("tree" "vecp")) nil [17781 18530])
            ("assoc-default" function (:arguments ("key" "alist" "test" "default")) nil [18570 19370])
            ("assoc-ignore-case" function (:arguments ("key" "alist")) nil [19372 19694])
            ("assoc-ignore-representation" function (:arguments ("key" "alist")) nil [19696 19964])
            ("member-ignore-case" function (:arguments ("elt" "list")) nil [19966 20401])
            ("assq-delete-all" function (:arguments ("key" "alist")) nil [20403 20887])
            ("rassq-delete-all" function (:arguments ("value" "alist")) nil [20889 21382])
            ("remove" function (:arguments ("elt" "seq")) nil [21384 21737])
            ("remq" function (:arguments ("elt" "list")) nil [21739 22070])
            ("kbd" function (:arguments ("keys")) nil [22095 22405])
            ("put" code nil nil [22406 22424])
            ("undefined" function (:user-visible-flag t) nil [22426 22881])
            ("put" code nil nil [22976 23011])
            ("suppress-keymap" function (:arguments ("map" "nodigits")) nil [23013 23577])
            ("make-composed-keymap" function (:arguments ("maps" "parent")) nil [23579 24231])
            ("define-key-after" function (:arguments ("keymap" "key" "definition" "after")) nil [24233 26294])
            ("map-keymap-sorted" function (:arguments ("function" "keymap")) nil [26296 26976])
            ("keymap--menu-item-binding" function (:arguments ("val")) nil [26978 27448])
            ("keymap--menu-item-with-binding" function (:arguments ("item" "binding")) nil [27502 28102])
            ("keymap--merge-bindings" function (:arguments ("val1" "val2")) nil [28104 28570])
            ("keymap-canonicalize" function (:arguments ("map")) nil [28572 30441])
            ("put" code nil nil [30443 30500])
            ("keyboard-translate" function (:arguments ("from" "to")) nil [30502 30877])
            ("global-set-key" function
               (:user-visible-flag t
                :arguments ("key" "command"))
                nil [30908 31654])
            ("local-set-key" function
               (:user-visible-flag t
                :arguments ("key" "command"))
                nil [31656 32460])
            ("global-unset-key" function
               (:user-visible-flag t
                :arguments ("key"))
                nil [32462 32658])
            ("local-unset-key" function
               (:user-visible-flag t
                :arguments ("key"))
                nil [32660 32889])
            ("key-substitution-in-progress" variable nil nil [32945 33038])
            ("substitute-key-definition" function (:arguments ("olddef" "newdef" "keymap" "oldmap" "prefix")) nil [33040 34424])
            ("substitute-key-definition-key" function (:arguments ("defn" "olddef" "newdef" "prefix" "keymap")) nil [34426 36091])
            ("global-map" variable nil nil [36240 36414])
            ("esc-map" variable nil nil [36416 36556])
            ("ctl-x-map" variable nil nil [36558 36693])
            ("ctl-x-4-map" variable (:default-value (make-sparse-keymap)) nil [36695 36773])
            ("defalias" code nil nil [36774 36812])
            ("define-key" code nil nil [36813 36855])
            ("ctl-x-5-map" variable (:default-value (make-sparse-keymap)) nil [36857 36929])
            ("defalias" code nil nil [36930 36968])
            ("define-key" code nil nil [36969 37011])
            ("listify-key-sequence-1" variable
               (:constant-flag t
                :default-value (logior 128 134217728))
                nil [37051 37106])
            ("listify-key-sequence" function (:arguments ("key")) nil [37108 37346])
            ("eventp" function (:arguments ("obj")) nil [37348 37549])
            ("event-modifiers" function (:arguments ("event")) nil [37551 38845])
            ("event-basic-type" function (:arguments ("event")) nil [38847 39615])
            ("mouse-movement-p" function (:arguments ("object")) nil [39617 39750])
            ("mouse-event-p" function (:arguments ("object")) nil [39752 39970])
            ("event-start" function (:arguments ("event")) nil [39972 41132])
            ("event-end" function (:arguments ("event")) nil [41134 41452])
            ("event-click-count" function (:arguments ("event")) nil [41454 41664])
            ("posnp" function (:arguments ("obj")) nil [41721 42303])
            ("posn-window" function (:arguments ("position")) nil [42337 42519])
            ("posn-area" function (:arguments ("position")) nil [42521 42845])
            ("posn-point" function (:arguments ("position")) nil [42847 43313])
            ("posn-set-point" function (:arguments ("position")) nil [43315 43635])
            ("posn-x-y" function (:arguments ("position")) nil [43637 43890])
            ("declare-function" code nil nil [43892 43958])
            ("posn-col-row" function (:arguments ("position")) nil [43960 45778])
            ("posn-actual-col-row" function (:arguments ("position")) nil [45780 46370])
            ("posn-timestamp" function (:arguments ("position")) nil [46372 46560])
            ("posn-string" function (:arguments ("position")) nil [46562 46921])
            ("posn-image" function (:arguments ("position")) nil [46923 47163])
            ("posn-object" function (:arguments ("position")) nil [47165 47534])
            ("posn-object-x-y" function (:arguments ("position")) nil [47536 47823])
            ("posn-object-width-height" function (:arguments ("position")) nil [47825 48085])
            ("define-obsolete-function-alias" code nil nil [48128 48193])
            ("define-obsolete-function-alias" code nil nil [48194 48267])
            ("define-obsolete-function-alias" code nil nil [48268 48332])
            ("define-obsolete-function-alias" code nil nil [48333 48404])
            ("define-obsolete-function-alias" code nil nil [48405 48478])
            ("define-obsolete-function-alias" code nil nil [48479 48551])
            ("make-obsolete" code nil nil [48553 48619])
            ("make-obsolete" code nil nil [48620 48669])
            ("insert-string" function (:arguments ("args")) nil [48671 48989])
            ("makehash" function (:arguments ("test")) nil [48991 49111])
            ("log10" function (:arguments ("x")) nil [49113 49222])
            ("defalias" code nil nil [49270 49304])
            ("make-obsolete" code nil nil [49305 49359])
            ("defalias" code nil nil [49360 49396])
            ("make-obsolete" code nil nil [49397 49453])
            ("make-obsolete" code nil nil [49454 49561])
            ("set-advertised-calling-convention" code nil nil [49562 49663])
            ("set-advertised-calling-convention" code nil nil [49664 49732])
            ("set-advertised-calling-convention" code nil nil [49733 49818])
            ("set-advertised-calling-convention" code nil nil [49819 49888])
            ("set-advertised-calling-convention" code nil nil [49889 49958])
            ("make-obsolete-variable" code nil nil [50363 50438])
            ("make-obsolete-variable" code nil nil [50439 50518])
            ("make-obsolete-variable" code nil nil [50519 50586])
            ("make-obsolete-variable" code nil nil [50587 50652])
            ("make-obsolete-variable" code nil nil [50653 50714])
            ("make-obsolete-variable" code nil nil [50715 50786])
            ("make-obsolete-variable" code nil nil [50787 50852])
            ("make-obsolete-variable" code nil nil [50853 50914])
            ("make-obsolete-variable" code nil nil [50915 50990])
            ("make-obsolete-variable" code nil nil [50991 51068])
            ("make-obsolete-variable" code nil nil [51069 51148])
            ("make-obsolete-variable" code nil nil [51149 51226])
            ("make-obsolete-variable" code nil nil [51227 51306])
            ("make-obsolete-variable" code nil nil [51307 51396])
            ("make-obsolete-variable" code nil nil [51397 51472])
            ("make-obsolete-variable" code nil nil [51473 51554])
            ("make-obsolete-variable" code nil nil [51555 51638])
            ("make-obsolete-variable" code nil nil [51639 51734])
            ("make-obsolete-variable" code nil nil [51735 51822])
            ("make-obsolete-variable" code nil nil [51823 51904])
            ("make-obsolete-variable" code nil nil [51905 51992])
            ("make-obsolete-variable" code nil nil [51993 52084])
            ("make-obsolete-variable" code nil nil [52085 52150])
            ("make-obsolete-variable" code nil nil [52151 52216])
            ("make-obsolete-variable" code nil nil [52217 52320])
            ("make-obsolete-variable" code nil nil [52321 52414])
            ("make-obsolete-variable" code nil nil [52415 52478])
            ("make-obsolete-variable" code nil nil [52479 52619])
            ("make-obsolete-variable" code nil nil [52621 52685])
            ("make-obsolete-variable" code nil nil [52686 52769])
            ("make-obsolete-variable" code nil nil [52770 52842])
            ("make-obsolete-variable" code nil nil [52843 52919])
            ("make-obsolete-variable" code nil nil [52920 52977])
            ("make-obsolete" code nil nil [52978 53034])
            ("make-obsolete" code nil nil [53035 53095])
            ("make-obsolete" code nil nil [53097 53151])
            ("make-obsolete" code nil nil [53152 53208])
            ("define-obsolete-variable-alias" code nil nil [53247 53334])
            ("define-obsolete-variable-alias" code nil nil [53336 53429])
            ("define-obsolete-variable-alias" code nil nil [53430 53523])
            ("make-obsolete-variable" code nil nil [53769 53833])
            ("defvaralias" code nil nil [53835 53892])
            ("defalias" code nil nil [53965 54009])
            ("defalias" code nil nil [54010 54054])
            ("defalias" code nil nil [54055 54088])
            ("defalias" code nil nil [54089 54122])
            ("defalias" code nil nil [54123 54158])
            ("defalias" code nil nil [54159 54185])
            ("defalias" code nil nil [54186 54212])
            ("defalias" code nil nil [54213 54235])
            ("defalias" code nil nil [54261 54300])
            ("defalias" code nil nil [54301 54355])
            ("defalias" code nil nil [54356 54426])
            ("defalias" code nil nil [54427 54499])
            ("defalias" code nil nil [54500 54543])
            ("defalias" code nil nil [54544 54588])
            ("defalias" code nil nil [54589 54622])
            ("defalias" code nil nil [54623 54656])
            ("defalias" code nil nil [54688 54731])
            ("defalias" code nil nil [54732 54781])
            ("defalias" code nil nil [54783 54836])
            ("add-hook" function (:arguments ("hook" "function" "append" "local")) nil [54875 57004])
            ("remove-hook" function (:arguments ("hook" "function" "local")) nil [57006 58674])
            ("letrec" function (:arguments ("binders" "body")) nil [58676 59305])
            ("with-wrapper-hook" function (:arguments ("hook" "args" "body")) nil [59307 62360])
            ("add-to-list" function (:arguments ("list-var" "element" "append" "compare-fn")) nil [62362 65709])
            ("add-to-ordered-list" function (:arguments ("list-var" "element" "order")) nil [65712 67031])
            ("add-to-history" function (:arguments ("history-var" "newelt" "maxelt" "keep-all")) nil [67033 68245])
            ("delay-mode-hooks" variable nil nil [68267 68361])
            ("delayed-mode-hooks" variable nil nil [68362 68443])
            ("make-variable-buffer-local" code nil nil [68444 68492])
            ("put" code nil nil [68493 68535])
            ("change-major-mode-after-body-hook" variable nil nil [68537 68651])
            ("after-change-major-mode-hook" variable nil nil [68653 68755])
            ("run-mode-hooks" function (:arguments ("hooks")) nil [68757 69640])
            ("delay-mode-hooks" function (:arguments ("body")) nil [69642 70043])
            ("derived-mode-p" function (:arguments ("modes")) nil [70104 70417])
            ("minor-mode-list" variable (:default-value (quote (auto-save-mode auto-fill-mode abbrev-mode overwrite-mode view-mode hs-minor-mode))) nil [70608 70801])
            ("add-minor-mode" function (:arguments ("toggle" "name" "keymap" "after" "toggle-fun")) nil [70803 73488])
            ("autoloadp" function (:arguments ("object")) nil [73510 73612])
            ("symbol-file" function (:arguments ("symbol" "type")) nil [74096 75303])
            ("locate-library" function
               (:user-visible-flag t
                :arguments ("library" "nosuffix" "path" "interactive-call"))
                nil [75305 76711])
            ("process-lines" function (:arguments ("program" "args")) nil [76736 77341])
            ("process-live-p" function (:arguments ("process")) nil [77343 77656])
            ("make-obsolete" code nil nil [77676 77801])
            ("process-kill-without-query" function (:arguments ("process" "_flag")) nil [77802 78146])
            ("process-kill-buffer-query-function" function nil nil [78148 78567])
            ("add-hook" code nil nil [78569 78644])
            ("process-get" function (:arguments ("process" "propname")) nil [78675 78887])
            ("process-put" function (:arguments ("process" "propname" "value")) nil [78889 79128])
            ("read-key-empty-map" variable
               (:constant-flag t
                :default-value (make-sparse-keymap))
                nil [79168 79218])
            ("read-key-delay" variable (:default-value 0.01) nil [79220 79248])
            ("read-key" function (:arguments ("prompt")) nil [79297 82003])
            ("read-passwd-map" variable (:default-value (let ((map (make-sparse-keymap))) (set-keymap-parent map minibuffer-local-map) (define-key map "" (function delete-minibuffer-contents)) map)) nil [82005 82342])
            ("read-passwd" function (:arguments ("prompt" "confirm" "default")) nil [82344 85116])
            ("read-number" function (:arguments ("prompt" "default")) nil [85118 86188])
            ("read-char-choice" function (:arguments ("prompt" "chars" "inhibit-keyboard-quit")) nil [86190 87929])
            ("sit-for" function (:arguments ("seconds" "nodisp" "obsolete")) nil [87931 90275])
            ("declare-function" code nil nil [90315 90394])
            ("y-or-n-p" function (:arguments ("prompt")) nil [90396 93874])
            ("atomic-change-group" function (:arguments ("body")) nil [93905 95111])
            ("prepare-change-group" function (:arguments ("buffer")) nil [95113 96589])
            ("activate-change-group" function (:arguments ("handle")) nil [96591 96829])
            ("accept-change-group" function (:arguments ("handle")) nil [96831 97122])
            ("cancel-change-group" function (:arguments ("handle")) nil [97124 98295])
            ("define-obsolete-function-alias" code nil nil [98353 98435])
            ("momentary-string-display" function (:arguments ("string" "pos" "exit-char" "message")) nil [98437 99937])
            ("copy-overlay" function (:arguments ("o")) nil [99966 100540])
            ("remove-overlays" function (:arguments ("beg" "end" "name" "val")) nil [100542 101550])
            ("suspend-hook" variable nil nil [101572 101656])
            ("suspend-resume-hook" variable nil nil [101658 101756])
            ("temp-buffer-show-hook" variable nil nil [101758 101974])
            ("temp-buffer-setup-hook" variable nil nil [101976 102207])
            ("user-emacs-directory" variable
               (:constant-flag t
                :default-value (if (eq system-type (quote ms-dos)) "~/_emacs.d/" "~/.emacs.d/"))
                nil [102209 102584])
            ("buffer-narrowed-p" function nil nil [102617 102751])
            ("find-tag-default-bounds" function nil nil [102753 103756])
            ("find-tag-default" function nil nil [103758 104024])
            ("find-tag-default-as-regexp" function nil nil [104026 104461])
            ("find-tag-default-as-symbol-regexp" function nil nil [104463 105022])
            ("play-sound" function (:arguments ("sound")) nil [105024 105843])
            ("declare-function" code nil nil [105845 105901])
            ("shell-quote-argument" function (:arguments ("argument")) nil [105903 108048])
            ("string-or-null-p" function (:arguments ("object")) nil [108050 108187])
            ("booleanp" function (:arguments ("object")) nil [108189 108347])
            ("special-form-p" function (:arguments ("object")) nil [108349 108594])
            ("macrop" function (:arguments ("object")) nil [108596 108828])
            ("field-at-pos" function (:arguments ("pos")) nil [108830 109100])
            ("sha1" function (:arguments ("object" "start" "end" "binary")) nil [109102 109465])
            ("defalias" code nil nil [109467 109820])
            ("function-get" function (:arguments ("f" "prop" "autoload")) nil [109822 110632])
            ("yank-handled-properties" variable nil nil [110739 110771])
            ("yank-excluded-properties" variable nil nil [110772 110805])
            ("remove-yank-excluded-properties" function (:arguments ("start" "end")) nil [110807 111596])
            ("yank-undo-function" variable nil nil [111598 111625])
            ("insert-for-yank" function (:arguments ("string")) nil [111627 111986])
            ("insert-for-yank-1" function (:arguments ("string")) nil [111988 114338])
            ("insert-buffer-substring-no-properties" function (:arguments ("buffer" "start" "end")) nil [114340 114825])
            ("insert-buffer-substring-as-yank" function (:arguments ("buffer" "start" "end")) nil [114827 115513])
            ("yank-handle-font-lock-face-property" function (:arguments ("face" "start" "end")) nil [115515 115827])
            ("yank-handle-category-property" function (:arguments ("category" "start" "end")) nil [115966 116404])
            ("start-process-shell-command" function (:arguments ("name" "buffer" "args")) nil [116442 117426])
            ("start-file-process-shell-command" function (:arguments ("name" "buffer" "args")) nil [117428 117920])
            ("call-process-shell-command" function (:arguments ("command" "infile" "buffer" "display" "args")) nil [117922 119563])
            ("process-file-shell-command" function (:arguments ("command" "infile" "buffer" "display" "args")) nil [119565 120114])
            ("with-current-buffer" function (:arguments ("buffer-or-name" "body")) nil [120169 120557])
            ("internal--before-with-selected-window" function (:arguments ("window")) nil [120559 121079])
            ("internal--after-with-selected-window" function (:arguments ("state")) nil [121081 121641])
            ("with-selected-window" function (:arguments ("window" "body")) nil [121643 122781])
            ("with-selected-frame" function (:arguments ("frame" "body")) nil [122783 123524])
            ("save-window-excursion" function (:arguments ("body")) nil [123526 124345])
            ("internal-temp-output-buffer-show" function (:arguments ("buffer")) nil [124347 125742])
            ("with-output-to-temp-buffer" function (:arguments ("bufname" "body")) nil [125795 128248])
            ("with-temp-file" function (:arguments ("file" "body")) nil [128250 128945])
            ("with-temp-message" function (:arguments ("message" "body")) nil [128947 129874])
            ("with-temp-buffer" function (:arguments ("body")) nil [129876 130435])
            ("with-silent-modifications" function (:arguments ("body")) nil [130437 131635])
            ("with-output-to-string" function (:arguments ("body")) nil [131637 132082])
            ("with-local-quit" function (:arguments ("body")) nil [132084 132839])
            ("while-no-input" function (:arguments ("body")) nil [132841 133341])
            ("condition-case-unless-debug" function (:arguments ("var" "bodyform" "handlers")) nil [133343 133896])
            ("define-obsolete-function-alias" code nil nil [133898 133993])
            ("with-demoted-errors" function (:arguments ("format" "body")) nil [133995 134932])
            ("combine-after-change-calls" function (:arguments ("body")) nil [134934 135629])
            ("with-case-table" function (:arguments ("table" "body")) nil [135631 136152])
            ("save-match-data-internal" variable nil nil [136185 136218])
            ("save-match-data" function (:arguments ("body")) nil [136476 137156])
            ("match-string" function (:arguments ("num" "string")) nil [137158 137803])
            ("match-string-no-properties" function (:arguments ("num" "string")) nil [137805 138529])
            ("match-substitute-replacement" function (:arguments ("replacement" "fixedcase" "literal" "string" "subexp")) nil [138532 139181])
            ("looking-back" function (:arguments ("regexp" "limit" "greedy")) nil [139184 140369])
            ("looking-at-p" function (:arguments ("regexp")) nil [140371 140549])
            ("string-match-p" function (:arguments ("regexp" "string" "start")) nil [140551 140771])
            ("subregexp-context-p" function (:arguments ("regexp" "pos" "start")) nil [140773 142683])
            ("split-string-default-separators" variable
               (:constant-flag t
                :default-value "[ 	
]+")
                nil [142705 143058])
            ("split-string" function (:arguments ("string" "separators" "omit-nulls" "trim")) nil [143320 146436])
            ("combine-and-quote-strings" function (:arguments ("strings" "separator")) nil [146438 146999])
            ("split-string-and-unquote" function (:arguments ("string" "separator")) nil [147001 147637])
            ("subst-char-in-string" function (:arguments ("fromchar" "tochar" "string" "inplace")) nil [147671 148075])
            ("replace-regexp-in-string" function (:arguments ("regexp" "rep" "string" "fixedcase" "literal" "subexp" "start")) nil [148077 150656])
            ("string-prefix-p" function (:arguments ("str1" "str2" "ignore-case")) nil [150659 150958])
            ("string-suffix-p" function (:arguments ("suffix" "string" "ignore-case")) nil [150960 151369])
            ("bidi-string-mark-left-to-right" function (:arguments ("str")) nil [151371 152154])
            ("load-history-regexp" function (:arguments ("file")) nil [152194 152830])
            ("load-history-filename-element" function (:arguments ("file-regexp")) nil [152832 153268])
            ("put" code nil nil [153270 153316])
            ("eval-after-load" function (:arguments ("file" "form")) nil [153317 157198])
            ("with-eval-after-load" function (:arguments ("file" "body")) nil [157200 157480])
            ("after-load-functions" variable nil nil [157482 157655])
            ("do-after-load-evaluation" function (:arguments ("abs-file")) nil [157657 159196])
            ("eval-next-after-load" function (:arguments ("file")) nil [159198 159498])
            ("display-delayed-warnings" function nil nil [159502 159769])
            ("collapse-delayed-warnings" function nil nil [159771 160450])
            ("delayed-warnings-hook" variable (:default-value (quote (collapse-delayed-warnings display-delayed-warnings))) nil [160580 160920])
            ("delay-warning" function (:arguments ("type" "message" "level" "buffer-name")) nil [160922 161177])
            ("add-to-invisibility-spec" function (:arguments ("element")) nil [161206 161549])
            ("remove-from-invisibility-spec" function (:arguments ("element")) nil [161551 161775])
            ("with-syntax-table" function (:arguments ("table" "body")) nil [161799 162435])
            ("make-syntax-table" function (:arguments ("oldtable")) nil [162437 162757])
            ("syntax-after" function (:arguments ("pos")) nil [162759 163132])
            ("syntax-class" function (:arguments ("syntax")) nil [163134 163486])
            ("forward-whitespace" function
               (:user-visible-flag t
                :arguments ("arg"))
                nil [163533 164116])
            ("forward-symbol" function
               (:user-visible-flag t
                :arguments ("arg"))
                nil [164131 164680])
            ("forward-same-syntax" function
               (:user-visible-flag t
                :arguments ("arg"))
                nil [164701 165183])
            ("text-clone--maintaining" variable nil nil [165205 165241])
            ("text-clone--maintain" function (:arguments ("ol1" "after" "beg" "end" "_len")) nil [165243 167309])
            ("text-clone-create" function (:arguments ("start" "end" "spreadp" "syntax")) nil [167311 169559])
            ("define-mail-user-agent" function (:arguments ("symbol" "composefunc" "sendfunc" "abortfunc" "hookvar")) nil [169667 171245])
            ("called-interactively-p-functions" variable nil nil [171248 171665])
            ("internal--call-interactively" variable
               (:constant-flag t
                :default-value (symbol-function (quote call-interactively)))
                nil [171667 171744])
            ("called-interactively-p" function (:arguments ("kind")) nil [171746 175843])
            ("interactive-p" function nil nil [175845 176855])
            ("internal-push-keymap" function (:arguments ("keymap" "symbol")) nil [176857 177202])
            ("internal-pop-keymap" function (:arguments ("keymap" "symbol")) nil [177204 177512])
            ("define-obsolete-function-alias" code nil nil [177514 177601])
            ("set-transient-map" function (:arguments ("map" "keep-pred" "on-exit")) nil [177603 179906])
            ("progress-reporter-update" function (:arguments ("reporter" "value")) nil [180489 181256])
            ("make-progress-reporter" function (:arguments ("message" "min-value" "max-value" "current-value" "min-change" "min-time")) nil [181258 183103])
            ("progress-reporter-force-update" function (:arguments ("reporter" "value" "new-message")) nil [183105 183604])
            ("progress-reporter--pulse-characters" variable (:default-value ["-" "\\" "|" "/"]) nil [183606 183723])
            ("progress-reporter-do-update" function (:arguments ("reporter" "value")) nil [183725 185431])
            ("progress-reporter-done" function (:arguments ("reporter")) nil [185433 185588])
            ("dotimes-with-progress-reporter" function (:arguments ("spec" "message" "body")) nil [185590 186694])
            ("version-separator" variable
               (:constant-flag t
                :default-value ".")
                nil [186731 186890])
            ("version-regexp-alist" variable
               (:constant-flag t
                :default-value (quote (("^[-_+ ]?snapshot$" . -4) ("^[-_+]$" . -4) ("^[-_+ ]?\\(cvs\\|git\\|bzr\\|svn\\|hg\\|darcs\\)$" . -4) ("^[-_+ ]?alpha$" . -3) ("^[-_+ ]?beta$" . -2) ("^[-_+ ]?\\(pre\\|rc\\)$" . -1))))
                nil [186893 188388])
            ("version-to-list" function (:arguments ("ver")) nil [188391 190795])
            ("version-list-<" function (:arguments ("l1" "l2")) nil [190798 191629])
            ("version-list-=" function (:arguments ("l1" "l2")) nil [191632 192431])
            ("version-list-<=" function (:arguments ("l1" "l2")) nil [192434 193219])
            ("version-list-not-zero" function (:arguments ("lst")) nil [193221 193531])
            ("version<" function (:arguments ("v1" "v2")) nil [193534 194038])
            ("version<=" function (:arguments ("v1" "v2")) nil [194040 194558])
            ("version=" function (:arguments ("v1" "v2")) nil [194560 195054])
            ("menu-bar-separator" variable
               (:constant-flag t
                :default-value (quote ("--")))
                nil [195068 195130])
            ("when" code nil nil [195292 195417])
            ("unmsys--file-name" function (:arguments ("file")) nil [195550 196037]))          
      :file "subr.el.gz"
      :pointmax 196062
      :fsize 58331
      :lastmodtime '(21788 61018 0 0)
      :unmatched-syntax nil))
  :file "!usr!local!share!emacs!24.5!lisp!semantic.cache"
  :semantic-tag-version "2.0"
  :semanticdb-version "2.2")
