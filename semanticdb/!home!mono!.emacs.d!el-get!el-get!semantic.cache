;; Object el-get/
;; SEMANTICDB Tags save file
(semanticdb-project-database-file "el-get/"
  :tables
  (list
    (semanticdb-table "el-get.el"
      :major-mode 'emacs-lisp-mode
      :tags 
        '( ("el-get-core" include nil nil [7867 7889])
            ("el-get-custom" include nil nil [7941 7965])
            ("el-get-methods" include nil nil [8016 8041])
            ("el-get-recipes" include nil nil [8097 8122])
            ("el-get-status" include nil nil [8172 8196])
            ("el-get-build" include nil nil [8246 8269])
            ("el-get-byte-compile" include nil nil [8306 8336])
            ("el-get-dependencies" include nil nil [8379 8409])
            ("el-get-notify" include nil nil [8459 8483])
            ("el-get-list-packages" include nil nil [8539 8570])
            ("el-get-autoloading" include nil nil [8619 8648])
            ("let*" code nil nil [8721 8984])
            ("el-get-next-packages" variable nil nil [8986 9094])
            ("el-get-installation-failed" function (:arguments ("package" "signal-data")) nil [9096 9354])
            ("el-get-version" function (:user-visible-flag t) nil [9415 9801])
            ("el-get-read-all-recipe-names" function nil nil [9803 10091])
            ("el-get-error-unless-package-p" function (:arguments ("package")) nil [10093 10487])
            ("el-get-read-package-name" function (:arguments ("action" "filtered")) nil [10489 10893])
            ("el-get-read-recipe-name" function (:arguments ("action")) nil [10895 11183])
            ("el-get-find-recipe-file" function
               (:user-visible-flag t
                :arguments ("package" "dir"))
                nil [11185 12165])
            ("el-get-eval-after-load" function (:arguments ("package" "form")) nil [12167 12580])
            ("put" code nil nil [12581 12682])
            ("el-get-run-package-support" function (:arguments ("form" "fname" "package")) nil [12684 15359])
            ("el-get-lazy-run-package-support" function (:arguments ("form" "fname" "package")) nil [15361 15615])
            ("el-get-activated-list" variable nil nil [15619 15697])
            ("el-get-init" function
               (:user-visible-flag t
                :arguments ("package"))
                nil [15699 16217])
            ("el-get-do-init" function (:arguments ("package" "package-status-alist")) nil [16219 21656])
            ("el-get-install" function
               (:user-visible-flag t
                :arguments ("package"))
                nil [21675 22289])
            ("el-get-install-next-packages" function (:arguments ("ignored")) nil [22291 22873])
            ("el-get-post-install-build" function (:arguments ("package")) nil [22875 23192])
            ("el-get-verify-checksum" function (:arguments ("package")) nil [23194 24171])
            ("el-get-post-install" function (:arguments ("package")) nil [24173 25172])
            ("el-get-do-install" function (:arguments ("package")) nil [25174 26676])
            ("el-get-reload" function
               (:user-visible-flag t
                :arguments ("package" "package-status-alist"))
                nil [26678 29385])
            ("el-get-post-update-build" function (:arguments ("package")) nil [29387 29867])
            ("el-get-post-update" function (:arguments ("package")) nil [29869 30334])
            ("el-get-update-requires-reinstall" function (:arguments ("package")) nil [30336 30795])
            ("el-get-do-update" function (:arguments ("package")) nil [30797 31594])
            ("el-get-update-post-dependency-fun" variable nil nil [31596 31845])
            ("el-get-update" function
               (:user-visible-flag t
                :arguments ("package"))
                nil [31862 34185])
            ("el-get-update-all" function
               (:user-visible-flag t
                :arguments ("no-prompt"))
                nil [34202 34554])
            ("unless" code nil nil [34576 35185])
            ("el-get-update-packages-of-type" function
               (:user-visible-flag t
                :arguments ("type"))
                nil [35203 35882])
            ("el-get-self-update" function (:user-visible-flag t) nil [35899 36460])
            ("el-get-post-remove" function (:arguments ("package")) nil [36464 36723])
            ("el-get-remove" function
               (:user-visible-flag t
                :arguments ("package"))
                nil [36740 38291])
            ("el-get-reinstall" function
               (:user-visible-flag t
                :arguments ("package"))
                nil [38308 38503])
            ("el-get-cleanup" function (:arguments ("packages")) nil [38505 39489])
            ("el-get-cd" function
               (:user-visible-flag t
                :arguments ("package"))
                nil [39508 39754])
            ("el-get-write-recipe" function (:arguments ("source" "dir" "filename")) nil [39756 40301])
            ("el-get-make-recipes" function
               (:user-visible-flag t
                :arguments ("dir"))
                nil [40318 40927])
            ("el-get-checksum" function
               (:user-visible-flag t
                :arguments ("package"))
                nil [40944 41768])
            ("el-get-self-checksum" function (:user-visible-flag t) nil [41785 41967])
            ("el-get-init-and-install" function (:arguments ("packages")) nil [42017 44040])
            ("el-get" function (:arguments ("sync" "packages")) nil [44057 45890])
            ("el-get" package nil nil [45892 45909]))          
      :file "el-get.el"
      :pointmax 45935
      :fsize 45934
      :lastmodtime '(22376 43483 364347 882000)
      :unmatched-syntax '((close-paren 35185 . 35186) (symbol 34557 . 34573) (open-paren 34556 . 34557)))
    (semanticdb-table "el-get-core.el"
      :file "el-get-core.el"
      :fsize 22349
      :lastmodtime '(22376 43483 360347 882000))
    (semanticdb-table "el-get-custom.el"
      :file "el-get-custom.el"
      :fsize 23027
      :lastmodtime '(22376 43483 360347 882000))
    (semanticdb-table "el-get-methods.el"
      :file "el-get-methods.el"
      :fsize 1908
      :lastmodtime '(22376 43483 360347 882000))
    (semanticdb-table "el-get-recipes.el"
      :file "el-get-recipes.el"
      :fsize 13199
      :lastmodtime '(22376 43483 360347 882000))
    (semanticdb-table "el-get-status.el"
      :file "el-get-status.el"
      :fsize 15732
      :lastmodtime '(22376 43483 364347 882000))
    (semanticdb-table "el-get-build.el"
      :file "el-get-build.el"
      :fsize 11046
      :lastmodtime '(22376 43483 360347 882000))
    (semanticdb-table "el-get-byte-compile.el"
      :file "el-get-byte-compile.el"
      :fsize 8845
      :lastmodtime '(22376 43483 360347 882000))
    (semanticdb-table "el-get-dependencies.el"
      :file "el-get-dependencies.el"
      :fsize 8727
      :lastmodtime '(22376 43483 360347 882000))
    (semanticdb-table "el-get-notify.el"
      :file "el-get-notify.el"
      :fsize 5848
      :lastmodtime '(22376 43483 360347 882000))
    (semanticdb-table "el-get-list-packages.el"
      :file "el-get-list-packages.el"
      :fsize 17535
      :lastmodtime '(22376 43483 360347 882000))
    (semanticdb-table "el-get-autoloading.el"
      :file "el-get-autoloading.el"
      :fsize 6571
      :lastmodtime '(22376 43483 360347 882000))
    (semanticdb-table "el-get-bundle.el"
      :major-mode 'emacs-lisp-mode
      :tags 
        '( ("el-get" include nil nil [325 342])
            ("cl" include nil nil [362 375])
            ("el-get-bundle" customgroup (:user-visible-flag t) nil [396 457])
            ("el-get-bundle-byte-compile" variable (:default-value t) nil [459 594])
            ("el-get-bundle-init-directory" variable (:default-value (expand-file-name "bundle-init/" el-get-dir)) nil [596 775])
            ("el-get-bundle-sources" variable nil nil [777 811])
            ("el-get-bundle-init-count-alist" variable nil nil [812 855])
            ("el-get-bundle-init-alist" variable nil nil [856 893])
            ("el-get-bundle-gist-url-type-plist" variable
               (:constant-flag t
                :default-value (quote (http "http://gist.github.com/%s.git" https "https://gist.github.com/%s.git" git "git://gist.github.com/%s.git" ssh "git@gist.github.com:%s.git")))
                nil [895 1158])
            ("el-get-bundle-gist-url" function (:arguments ("id" "src")) nil [1174 1467])
            ("el-get-bundle-load-file-el" function (:arguments ("file")) nil [1469 1656])
            ("el-get-bundle-package-def" function (:arguments ("src")) nil [1658 1815])
            ("defalias" code nil nil [1816 1896])
            ("el-get-bundle-guess-type" function (:arguments ("src")) nil [1898 2459])
            ("el-get-bundle-parse-name" function (:arguments ("sym")) nil [2461 3471])
            ("el-get-bundle-init-id" function (:arguments ("callsite")) nil [3473 3700])
            ("el-get-bundle-load-init" function (:arguments ("el")) nil [3702 3850])
            ("el-get-bundle-make-init" function (:arguments ("src")) nil [3852 5573])
            ("el-get-bundle-el-get" function (:arguments ("src")) nil [5590 7648])
            ("el-get-bundle-post-update" function (:arguments ("package")) nil [7650 8057])
            ("add-hook" code nil nil [8058 8122])
            ("el-get-bundle-clear-init-count" function (:arguments ("callsite")) nil [8124 8500])
            ("add-hook" code nil nil [8501 8566])
            ("el-get-bundle" function (:arguments ("package" "form")) nil [8596 11034])
            ("el-get-bundle!" function (:arguments ("package" "args")) nil [11051 11530])
            ("el-get-bundle" package nil nil [11532 11556]))          
      :file "el-get-bundle.el"
      :pointmax 11588
      :fsize 11587
      :lastmodtime '(22376 43483 360347 882000)
      :unmatched-syntax '((close-paren 375 . 376) (symbol 344 . 361) (open-paren 343 . 344))))
  :file "!home!mono!.emacs.d!el-get!el-get!semantic.cache"
  :semantic-tag-version "2.0"
  :semanticdb-version "2.2")
